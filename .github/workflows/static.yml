# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
  # Run daily at midnight to fetch fresh data
  schedule:
    - cron: '0 0 * * *'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci
        
      - name: Ensure data directory exists
        run: mkdir -p public/data
        
      - name: Fetch API data
        run: |
          curl -X GET 'https://crm.secretstartups.org/api/users' -H 'accept: application/json' > public/data/associates.json
          
      # Preflight check - make sure the data was fetched successfully
      - name: Verify API data
        run: |
          if [ -s public/data/associates.json ]; then
            echo "API data fetched successfully"
            cat public/data/associates.json
          else
            echo "API data fetch failed, falling back to defaults if available"
            # Create minimal fallback data if needed
            if [ ! -f public/data/associates.json ]; then
              echo '[{"id":"fallback-id","name":"Example User","email":"example@secretstartups.org"}]' > public/data/associates.json
            fi
          fi

      - name: Build project
        run: npm run build

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4